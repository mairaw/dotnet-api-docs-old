<Type Name="XmlIgnoreAttribute" FullName="System.Xml.Serialization.XmlIgnoreAttribute">
  <TypeSignature Language="C#" Value="public class XmlIgnoreAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlIgnoreAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlIgnoreAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Instructs the <see cref="System.Xml.Serialization.XmlSerializer.Serialize%2A" /> method of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> not to serialize the public field or public read/write property value.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The XmlIgnoreAttribute belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object. If you apply the XmlIgnoreAttribute to any member of a class, the <xref:System.Xml.Serialization.XmlSerializer> ignores the member when serializing or deserializing an instance of the class. For a complete list of similar attributes, see [Attributes That Control XML Serialization](../Topic/Attributes%20That%20Control%20XML%20Serialization.md).  
  
 You can override the behavior caused by the XmlIgnoreAttribute by creating an <xref:System.Xml.Serialization.XmlAttributes> object, and setting its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`. You must <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class. Lastly, you must use the <xref:System.Xml.Serialization.XmlAttributeOverrides> object to construct an instance of the <xref:System.Xml.Serialization.XmlSerializer> class before you call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> methods.  
  
 The [XML Schema Definition Tool (Xsd.exe)](../Topic/XML%20Schema%20Definition%20Tool%20\(Xsd.exe\).md) occasionally generates the XmlIgnoreAttribute when creating classes from a schema file (.xsd). This behavior occurs because value types cannot be set to `null`, but all XML data types can be. Therefore, the tool creates two fields when it encounters an XML type that maps to a value type: one to hold the value and another special field that takes the form of `fieldnameSpecified`, where the `fieldname` is replaced by the name of the field or property. Notice, however, that this special field is generated only when the schema specifies that the element has no minimum occurrence (minOccurs = "0") and that the element has no default value. The <xref:System.Xml.Serialization.XmlSerializer> sets and checks this special field to determine whether a value has been set for the field or property. Because the special field must not be serialized, the tool applies the XmlIgnoreAttribute to it.  
  
 For more information about using attributes, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md).  
  
> [!NOTE]
>  You can use the word `XmlIgnore` in your code instead of the longer XmlIgnoreAttribute.  
  
   
  
## Examples  
 The following example shows a class named `Group`, which contains a field named `Comment`. The example assigns the XmlIgnoreAttribute to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to ignore the field when serializing or deserializing an instance of the class.  
  
 [!code-vb[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_32_1.vb)]
 [!code-cs[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.serializati_32_1.cs)]
 [!code-cpp[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.serializati_32_1.cpp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlIgnoreAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows a class named `Group`, which contains a field named `Comment`. The example assigns the <xref:System.Xml.Serialization.XmlIgnoreAttribute> to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to ignore the field when serializing or deserializing an instance of the class.  
  
 [!code-vb[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_40_1.vb)]
 [!code-cs[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_40_1.cs)]
 [!code-cpp[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_40_1.cpp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>