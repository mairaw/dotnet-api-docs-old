<Type Name="XmlTypeAttribute" FullName="System.Xml.Serialization.XmlTypeAttribute">
  <TypeSignature Language="C#" Value="public class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTypeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controls the XML schema that is generated when the attribute target is serialized by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The XmlTypeAttribute belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object. For a complete list of similar attributes, see [Attributes That Control XML Serialization](../Topic/Attributes%20That%20Control%20XML%20Serialization.md).  
  
 You can apply the XmlTypeAttribute to a class, structure, enumeration, or interface declaration.  
  
 Apply the XmlTypeAttribute to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the XmlTypeAttribute class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](../Topic/XML%20Schema%20Definition%20Tool%20\(Xsd.exe\).md). The tool writes the schema, including the type definition.  
  
> [!NOTE]
>  If you set the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`, the [XML Schema Definition Tool (Xsd.exe)](../Topic/XML%20Schema%20Definition%20Tool%20\(Xsd.exe\).md) does not include the type in the schema. By default, for each public class, the XSD tool generates a `complexType` and an element of that type.  
  
 For more information about using attributes, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md).  
  
> [!NOTE]
>  You can use the word `XmlType` in your code instead of the longer XmlTypeAttribute.  
  
   
  
## Examples  
 The following example shows two classes to which the XmlTypeAttribute has been applied.  
  
 [!code-cpp[Classic XmlTypeAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.serializati_35_1.cpp)]
 [!code-cs[Classic XmlTypeAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.serializati_35_1.cs)]
 [!code-vb[Classic XmlTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_35_1.vb)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/add/codesnippet/cpp/m-system.xml.serializati_6_1.cpp)]
 [!code-vb[XMLTypeAttribute1_2#2](~/add/codesnippet/visualbasic/m-system.xml.serializati_6_1.vb)]
 [!code-cs[XMLTypeAttribute1_2#2](~/add/codesnippet/csharp/m-system.xml.serializati_6_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</param>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class and specifies the name of the XML type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](../Topic/XML%20Schema%20Definition%20Tool%20\(Xsd.exe\).md). The tool writes the schema, including the type definition.  
  
   
  
## Examples  
 The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/add/codesnippet/cpp/m-system.xml.serializati_9_1.cpp)]
 [!code-vb[XMLTypeAttribute1_2#2](~/add/codesnippet/visualbasic/m-system.xml.serializati_9_1.vb)]
 [!code-cs[XMLTypeAttribute1_2#2](~/add/codesnippet/csharp/m-system.xml.serializati_9_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousType">
      <MemberSignature Language="C#" Value="public bool AnonymousType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AnonymousType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.</summary>
        <value>
          <see langword="true" />, if the resulting schema type is an XSD anonymous type; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether to include the type in XML schema documents.</summary>
        <value>
          <see langword="true" /> to include the type in XML schema documents; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition tool (XSD.exe). The tool writes the schema, including the type definition.  
  
   
  
## Examples  
 The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `ExtraneousInfo` class, setting the IncludeInSchema property to `false`.  
  
 [!code-vb[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_81_1.vb)]
 [!code-cpp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_81_1.cpp)]
 [!code-cs[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_81_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the namespace of the XML type.</summary>
        <value>The namespace of the XML type.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class while setting the Namespace property.  
  
 [!code-cpp[Classic XmlTypeAttribute.Namespace Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_29_1.cpp)]
 [!code-vb[Classic XmlTypeAttribute.Namespace Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_29_1.vb)]
 [!code-cs[Classic XmlTypeAttribute.Namespace Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_29_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the XML type.</summary>
        <value>The name of the XML type.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document. To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](../Topic/XML%20Schema%20Definition%20Tool%20\(Xsd.exe\).md). The tool writes the schema, including the type definition.  
  
   
  
## Examples  
 The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `Person` and `Job` classes. If you compile the class and pass the resulting executable file to the XML Schema Definition tool, the schema is displayed in the Output section.  
  
 [!code-cpp[Classic XmlTypeAttribute.TypeName Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_47_1.cpp)]
 [!code-cs[Classic XmlTypeAttribute.TypeName Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_47_1.cs)]
 [!code-vb[Classic XmlTypeAttribute.TypeName Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_47_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>