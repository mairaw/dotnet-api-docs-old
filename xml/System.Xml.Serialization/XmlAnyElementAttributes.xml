<Type Name="XmlAnyElementAttributes" FullName="System.Xml.Serialization.XmlAnyElementAttributes">
  <TypeSignature Language="C#" Value="public class XmlAnyElementAttributes : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttributes extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttributes" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the XmlAnyElementAttributes to override the behavior of a set of <xref:System.Xml.Serialization.XmlAnyElementAttribute> objects. Multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> class can be applied to a class member, as long as each instance has a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value; this instructs the <xref:System.Xml.Serialization.XmlSerializer> to collect unknown elements under the named element into the appropriate array. It is for this reason that multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> class can be added to the XmlAnyElementAttributes.  
  
 To override a set of <xref:System.Xml.Serialization.XmlAnyElementAttribute> objects:  
  
1.  Create an XmlAnyElementAttributes.  
  
2.  Create the set of <xref:System.Xml.Serialization.XmlAnyElementAttribute> objects, and add each object to the collection using the <xref:System.Xml.Serialization.XmlAnyElementAttributes.Add%2A> method.  
  
3.  Create an <xref:System.Xml.Serialization.XmlAttributes>.  
  
4.  Set the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property to the XmlAnyElementAttributes.  
  
5.  Create an <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
6.  Add the <xref:System.Xml.Serialization.XmlAttributes> to the <xref:System.Xml.Serialization.XmlAttributeOverrides> using the <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> method.  
  
7.  Create an instance of the <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides>.  
  
8.  Serialize or deserialize an object that contains the set of <xref:System.Xml.Serialization.XmlAnyElementAttribute> objects.  
  
   
  
## Examples  
 The following example creates a new <xref:System.Xml.Serialization.XmlAnyElementAttribute> and adds it to the collection of objects accessed through the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property. The <xref:System.Xml.Serialization.XmlAttributes> is then added to a <xref:System.Xml.Serialization.XmlAttributeOverrides> which is used to create an <xref:System.Xml.Serialization.XmlSerializer>. The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize or deserialize an object. To see the effect of using the XmlAnyElementAttributes property, create an XML document named UnknownElements.xml by running the `SerializeObject` method in the `Main` method. Edit the resulting document to include other (unknown) elements. Comment out the `SerializeObject` call in the `Main` method, and uncomment the call to the `DeserializeObject` method, which prints out the name and value of any unknown XML element.  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/add/codesnippet/cpp/t-system.xml.serializati_17_1.cpp)]
 [!code-cs[XmlAttributes.XmlAnyElements#1](~/add/codesnippet/csharp/t-system.xml.serializati_17_1.cs)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_17_1.vb)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Xml.Serialization.XmlAnyElementAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Xml.Serialization.XmlAnyElementAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Serialization.XmlAnyElementAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to add.</param>
        <summary>Adds an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to the collection.</summary>
        <returns>The index of the newly added <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a new <xref:System.Xml.Serialization.XmlAnyElementAttribute> and adds it to the collection of objects accessed through the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property. The <xref:System.Xml.Serialization.XmlAttributes> is then added to an <xref:System.Xml.Serialization.XmlAttributeOverrides>, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>. The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize or deserialize an object. To see the effect of using the <xref:System.Xml.Serialization.XmlAnyElementAttributes> property, create an XML document named UnknownElements.xml by running the `SerializeObject` method in the `Main` method. Edit the resulting document to include other (unknown) elements. Comment out the `SerializeObject` call in the `Main` method, and uncomment the call to the `DeserializeObject` method, which prints out the name and value of any unknown XML element.  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/add/codesnippet/cpp/1228f82f-b6b5-46d2-9629-_1.cpp)]
 [!code-cs[XmlAttributes.XmlAnyElements#1](~/add/codesnippet/csharp/1228f82f-b6b5-46d2-9629-_1.cs)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/add/codesnippet/visualbasic/1228f82f-b6b5-46d2-9629-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Serialization.XmlAnyElementAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Serialization.XmlAnyElementAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Serialization.XmlAnyElementAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> you are interested in.</param>
        <summary>Gets a value that indicates whether the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> exists in the collection.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> exists in the collection; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Serialization.XmlAnyElementAttribute[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Serialization.XmlAnyElementAttribute[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Xml.Serialization.XmlAnyElementAttribute[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional array of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
        <param name="index">The zero-based index in <c>array</c> at which copying begins.</param>
        <summary>Copies the entire collection to a compatible one-dimensional array of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects, starting at the specified index of the target array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Xml.Serialization.XmlAnyElementAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Xml.Serialization.XmlAnyElementAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Serialization.XmlAnyElementAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> whose index you want.</param>
        <summary>Gets the index of the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
        <returns>The index of the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Xml.Serialization.XmlAnyElementAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Xml.Serialization.XmlAnyElementAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="attribute" Type="System.Xml.Serialization.XmlAnyElementAttribute" />
      </Parameters>
      <Docs>
        <param name="index">The index where the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> is inserted.</param>
        <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to insert.</param>
        <summary>Inserts an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> into the collection at the specified index.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttribute this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttribute Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
        <summary>Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> at the specified index.</summary>
        <value>An <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> at the specified index.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Xml.Serialization.XmlAnyElementAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Xml.Serialization.XmlAnyElementAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Serialization.XmlAnyElementAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to remove.</param>
        <summary>Removes the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> from the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>