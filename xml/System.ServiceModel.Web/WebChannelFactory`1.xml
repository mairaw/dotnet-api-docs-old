<Type Name="WebChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.Web.WebChannelFactory&lt;TChannel&gt;">
  <TypeSignature Language="C#" Value="public class WebChannelFactory&lt;TChannel&gt; : System.ServiceModel.ChannelFactory&lt;TChannel&gt; where TChannel : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebChannelFactory`1&lt;class TChannel&gt; extends System.ServiceModel.ChannelFactory`1&lt;!TChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebChannelFactory`1" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.ChannelFactory&lt;TChannel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TChannel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TChannel">The type of channel to create.</typeparam>
    <summary>A class for accessing [!INCLUDE[indigo1](~/add/includes/indigo1-md.md)] Web services on a client.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class is a special <xref:System.ServiceModel.ChannelFactory> that automatically adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if it is not already present. Furthermore, it adds a default <xref:System.ServiceModel.WebHttpBinding> to the endpoint if the binding is not explicitly configured and the address is an HTTP or HTTPS address.  
  
 If all the operations of the contract have no return value or have a return value of type <xref:System.IO.Stream>, then the WebChannelFactory(TChannel) configures the binding for the appropriate content type.  
  
   
  
## Examples  
 The following code shows how to use the WebChannelFactory(TChannel) class to call a [!INCLUDE[indigo2](~/add/includes/indigo2-md.md)] service.  
  
 [!code-cs[BasicWebProgramming#0](~/add/codesnippet/csharp/t-system.servicemodel.we_2_1.cs)]
 [!code-vb[BasicWebProgramming#0](~/add/codesnippet/visualbasic/t-system.servicemodel.we_2_1.vb)]  
  
 For a full code example, see [Basic WCF REST Programming Model Sample](http://msdn.microsoft.com/en-us/d3265542-febc-4018-84ea-32ddcfd2d874).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding">The binding to use when creating the channel.</param>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> and use it to call a [!INCLUDE[indigo2](~/add/includes/indigo2-md.md)] service.  
  
 [!code-cs[BasicWebProgramming#1](~/add/codesnippet/csharp/b58ebfe5-e3e7-4e90-978c-_1.cs)]
 [!code-vb[BasicWebProgramming#1](~/add/codesnippet/visualbasic/b58ebfe5-e3e7-4e90-978c-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">The endpoint to use when creating the channel.</param>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> and use it to call a [!INCLUDE[indigo2](~/add/includes/indigo2-md.md)] service.  
  
 [!code-cs[BasicWebProgramming#2](~/add/codesnippet/csharp/8d875df8-e129-44de-af50-_1.cs)]
 [!code-vb[BasicWebProgramming#2](~/add/codesnippet/visualbasic/8d875df8-e129-44de-af50-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (string endpointConfigurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointConfigurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpointConfigurationName">The name within the application configuration file where the channel is configured.</param>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file.  
  
   
  
## Examples  
 The following code shows how use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and use it to call a [!INCLUDE[indigo2](~/add/includes/indigo2-md.md)] service.  
  
 [!code-cs[BasicWebProgramming#3](~/add/codesnippet/csharp/m-system.servicemodel.we_0_1.cs)]
 [!code-vb[BasicWebProgramming#3](~/add/codesnippet/visualbasic/m-system.servicemodel.we_0_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (Type channelType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type channelType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channelType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="channelType">The channel type to use.</param>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The type passed for the type parameter must be an interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (Uri remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remoteAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="remoteAddress">The URI of the Web service that is called.</param>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class with the specified <see cref="T:System.Uri" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and call a service.  
  
 [!code-cs[BasicWebProgramming#4](~/add/codesnippet/csharp/m-system.servicemodel.we_1_1.cs)]
 [!code-vb[BasicWebProgramming#4](~/add/codesnippet/visualbasic/m-system.servicemodel.we_1_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (System.ServiceModel.Channels.Binding binding, Uri remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.Binding binding, class System.Uri remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="binding">The binding to use.</param>
        <param name="remoteAddress">The URI of the Web service that is called.</param>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class with the specified binding and <see cref="T:System.Uri" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code shows how to use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and call a service.  
  
 [!code-cs[BasicWebProgramming#5](~/add/codesnippet/csharp/326b936a-9252-4f02-91e6-_1.cs)]
 [!code-vb[BasicWebProgramming#5](~/add/codesnippet/visualbasic/326b936a-9252-4f02-91e6-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (string endpointConfigurationName, Uri remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointConfigurationName, class System.Uri remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="endpointConfigurationName">The name within the application configuration file where the channel is configured.</param>
        <param name="remoteAddress">The URI of the Web service that is called.</param>
        <summary>Initializes a new instance of the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> class with the specified endpoint configuration and <see cref="T:System.Uri" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The `endpointConfigurationName` parameter must be set to the same value as the `name` attribute of the `<endpoint>` element in the application configuration file.  
  
   
  
## Examples  
 The following code shows how to use this constructor to create a <xref:System.ServiceModel.Web.WebChannelFactory%601> instance and call a service.  
  
 [!code-cs[BasicWebProgramming#6](~/add/codesnippet/csharp/117e002d-5876-472d-ab78-_1.cs)]
 [!code-vb[BasicWebProgramming#6](~/add/codesnippet/visualbasic/117e002d-5876-472d-ab78-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.OnOpening" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is called when the <see cref="System.ServiceModel.Web.WebChannelFactory%601" /> is opened.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When this method is called, if the <xref:System.ServiceModel.Web.WebChannelFactory%601> is not already associated with a binding a new <xref:System.ServiceModel.WebHttpBinding> is created based on the URI scheme of the remote address. Bindings with an HTTPS remote address are appropriately configured with the <xref:System.ServiceModel.WebHttpSecurity.Mode%2A> property set to <xref:System.ServiceModel.WebHttpSecurityMode> and the <xref:System.ServiceModel.WebHttpSecurity.Transport%2A> property set to `None`. The <xref:System.ServiceModel.Web.WebChannelFactory%601> adds an instance of <xref:System.ServiceModel.Description.WebHttpBehavior> to the endpoint if one does not already exist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>