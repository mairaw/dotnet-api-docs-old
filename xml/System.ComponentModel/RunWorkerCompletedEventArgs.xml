<Type Name="RunWorkerCompletedEventArgs" FullName="System.ComponentModel.RunWorkerCompletedEventArgs">
  <TypeSignature Language="C#" Value="public class RunWorkerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RunWorkerCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.RunWorkerCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the *MethodName*<see langword="Completed" /> event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you are using a class that implements the [Event-based Asynchronous Pattern Overview](../Topic/Event-based%20Asynchronous%20Pattern%20Overview.md), the class provides a *MethodName*`Completed` event. *MethodName* is a placeholder for the first part of the method's name. <xref:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted%2A?displayProperty=fullName> is an example of the name of such a method. If you add an instance of the RunWorkerCompletedEventArgs delegate to the event, you will receive information about the outcome of asynchronous operations in the RunWorkerCompletedEventArgs parameter of the corresponding event handler.  
  
> [!NOTE]
>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).  
  
   
  
## Examples  
 The following code example illustrates the use of RunWorkerCompletedEventArgs. This example is part of a larger sample for the <xref:System.ComponentModel.BackgroundWorker> class.  
  
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/add/codesnippet/visualbasic/t-system.componentmodel._70_1.vb)]
 [!code-cs[System.ComponentModel.BackgroundWorker#6](~/add/codesnippet/csharp/t-system.componentmodel._70_1.cs)]
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/add/codesnippet/cpp/t-system.componentmodel._70_1.cpp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RunWorkerCompletedEventArgs (object result, Exception error, bool cancelled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, class System.Exception error, bool cancelled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="cancelled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="result">The result of an asynchronous operation.</param>
        <param name="error">Any error that occurred during the asynchronous operation.</param>
        <param name="cancelled">A value indicating whether the asynchronous operation was canceled.</param>
        <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that represents the result of an asynchronous operation.</summary>
        <value>An <see cref="T:System.Object" /> representing the result of an asynchronous operation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Your <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event handler should always check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> and <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> properties before accessing the Result property. If an exception was raised or if the operation was canceled, accessing the Result property raises an exception.  
  
   
  
## Examples  
 The following code example demonstrates the use of the <xref:System.ComponentModel.BackgroundWorker.RunWorkerCompleted> event to handle the result of an asynchronous operation. This code example is part of a larger example provided for the <xref:System.ComponentModel.BackgroundWorker> class.  
  
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/add/codesnippet/visualbasic/p-system.componentmodel._4_1.vb)]
 [!code-cs[System.ComponentModel.BackgroundWorker#6](~/add/codesnippet/csharp/p-system.componentmodel._4_1.cs)]
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/add/codesnippet/cpp/p-system.componentmodel._4_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException">
          <see cref="System.ComponentModel.AsyncCompletedEventArgs.Error%2A" /> is not <see langword="null" />. The <see cref="System.Exception.InnerException%2A" /> property holds a reference to <see cref="System.ComponentModel.AsyncCompletedEventArgs.Error%2A" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserState">
      <MemberSignature Language="C#" Value="public object UserState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that represents the user state.</summary>
        <value>An <see cref="T:System.Object" /> representing the user state.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>