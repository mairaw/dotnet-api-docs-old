<Type Name="VisualStyleElement+TextBox+TextEdit" FullName="System.Windows.Forms.VisualStyles.VisualStyleElement+TextBox+TextEdit">
  <TypeSignature Language="C#" Value="public static class VisualStyleElement.TextBox.TextEdit" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract sealed beforefieldinit VisualStyleElement/TextBox/TextEdit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a text box. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each property of the VisualStyleElement.TextBox.TextEdit class returns a <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> for a different state of a text box.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Disabled%2A> property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementTextBoxTextEdit4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#326](~/add/codesnippet/csharp/t-system.windows.forms.v_13_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#326](~/add/codesnippet/visualbasic/t-system.windows.forms.v_13_1.vb)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assist">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleElement Assist { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.VisualStyles.VisualStyleElement Assist" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Assist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a visual style element that represents a text box in assist mode.</summary>
        <value>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a text box in assist mode.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Assist property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Assist property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementTextBoxTextEdit7` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#329](~/add/codesnippet/csharp/p-system.windows.forms.v_36_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#329](~/add/codesnippet/visualbasic/p-system.windows.forms.v_36_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disabled">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleElement Disabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.VisualStyles.VisualStyleElement Disabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Disabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a visual style element that represents a disabled text box.</summary>
        <value>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled text box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Disabled property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Disabled property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementTextBoxTextEdit4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#326](~/add/codesnippet/csharp/4ab0fb01-a42a-46c3-856e-_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#326](~/add/codesnippet/visualbasic/4ab0fb01-a42a-46c3-856e-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleElement Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.VisualStyles.VisualStyleElement Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a visual style element that represents a text box that has focus.</summary>
        <value>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a text box that has focus.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Focused property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Focused property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementTextBoxTextEdit5` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#327](~/add/codesnippet/csharp/p-system.windows.forms.v_84_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#327](~/add/codesnippet/visualbasic/p-system.windows.forms.v_84_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hot">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleElement Hot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.VisualStyles.VisualStyleElement Hot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Hot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a visual style element that represents a hot text box.</summary>
        <value>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot text box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Hot property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Hot property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementTextBoxTextEdit2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#324](~/add/codesnippet/csharp/p-system.windows.forms.v_2_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#324](~/add/codesnippet/visualbasic/p-system.windows.forms.v_2_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleElement Normal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.VisualStyles.VisualStyleElement Normal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Normal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a visual style element that represents a normal text box.</summary>
        <value>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal text box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Normal property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Normal property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementTextBoxTextEdit1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#323](~/add/codesnippet/csharp/p-system.windows.forms.v_73_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#323](~/add/codesnippet/visualbasic/p-system.windows.forms.v_73_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleElement ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.VisualStyles.VisualStyleElement ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a visual style element that represents a read-only text box.</summary>
        <value>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a read-only text box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the ReadOnly property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the ReadOnly property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementTextBoxTextEdit6` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#328](~/add/codesnippet/csharp/57954633-4c77-491e-814a-_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#328](~/add/codesnippet/visualbasic/57954633-4c77-491e-814a-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.VisualStyles.VisualStyleElement Selected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.VisualStyles.VisualStyleElement Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VisualStyles.VisualStyleElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a visual style element that represents a selected text box.</summary>
        <value>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a selected text box.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Selected property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.  
  
   
  
## Examples  
 The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Selected property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElement_Button_PushButton3` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#325](~/add/codesnippet/csharp/6518336d-123b-4024-857e-_1.cs)]
 [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#325](~/add/codesnippet/visualbasic/6518336d-123b-4024-857e-_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>