<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In some cases it may be more efficient for a binding to process messages with the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods. A <xref:System.ServiceModel.Channels.Binding> class can optionally implement IBindingRuntimePreferences to indicate to callers that this is preferred.  
  
 If a binding does not implement IBindingRuntimePreferences, the [!INCLUDE[indigo1](~/add/includes/indigo1-md.md)] Service Model Runtime layer defaults to using the asynchronous versions of the `Receive` and `Request` methods. If a binding does implement IBindingRuntimePreferences, the [!INCLUDE[indigo2](~/add/includes/indigo2-md.md)] Service Model Runtime layer checks the value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> and uses that to determine whether to call the synchronous versions of the these methods (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) or the asynchronous versions (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>. If IBindingRuntimePreferences is implemented by the binding and returns `true` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods to receive messages from the channel. If the binding does not implement IBindingRuntimePreferences or returns `false` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> methods.  
  
 Regardless of the value returned by the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, all bindings must still provide valid implementations of both the synchronous and asynchronous versions of the `Receive` methods for the specific channel types implemented. For more information about implementing custom channels, see [Developing Channels](../Topic/Developing%20Channels.md).  
  
   
  
## Examples  
 The following example shows the implementation of a binding that implements the IBindingRuntimePreferences interface. This code is taken from the [Chunking Channel](../Topic/Chunking%20Channel.md) sample:  
  
 [!code-cs[S_UE_ChunkingChannel#0](~/add/codesnippet/csharp/t-system.servicemodel.ch_23_1.cs)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</summary>
        <value>
          <see langword="true" /> if requests can be handled more efficiently synchronously; otherwise<see langword=" false" />. The default is <see langword="false" />, to handle requests asynchronously.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The standard (system-provided) bindings provided by [!INCLUDE[indigo1](~/add/includes/indigo1-md.md)] have implemented this interface and in some cases override the default value to process incoming messages synchronously.  
  
   
  
## Examples  
 [!code-cs[S_UE_ChunkingChannel#1](~/add/codesnippet/csharp/p-system.servicemodel.ch_0_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>