<Type Name="IPEndPoint" FullName="System.Net.IPEndPoint">
  <TypeSignature Language="C#" Value="public class IPEndPoint : System.Net.EndPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit IPEndPoint extends System.Net.EndPoint" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPoint" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.EndPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a network endpoint as an IP address and a port number.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IPEndPoint class contains the host and local or remote port information needed by an application to connect to a service on a host. By combining the host's IP address and port number of a service, the IPEndPoint class forms a connection point to a service.  
  
   
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#1](~/add/codesnippet/cpp/t-system.net.ipendpoint_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#1](~/add/codesnippet/visualbasic/t-system.net.ipendpoint_1.vb)]
 [!code-cs[System.Net.IPEndPoint#1](~/add/codesnippet/csharp/t-system.net.ipendpoint_1.cs)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (long address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">The IP address of the Internet host.</param>
        <param name="port">The port number associated with the <c>address</c>, or 0 to specify any available port. <c>port</c> is in host order.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the specified IP address and port number to create an <xref:System.Net.IPEndPoint>.  
  
 [!code-cpp[IPEndPoint_Properties#4](~/add/codesnippet/cpp/m-system.net.ipendpoint._0_1.cpp)]
 [!code-vb[IPEndPoint_Properties#4](~/add/codesnippet/visualbasic/m-system.net.ipendpoint._0_1.vb)]
 [!code-cs[IPEndPoint_Properties#4](~/add/codesnippet/csharp/m-system.net.ipendpoint._0_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
 -or-  
  
 <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.  
  
 -or-  
  
 <paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">An <see cref="T:System.Net.IPAddress" />.</param>
        <param name="port">The port number associated with the <c>address</c>, or 0 to specify any available port. <c>port</c> is in host order.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#2](~/add/codesnippet/cpp/m-system.net.ipendpoint._4_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#2](~/add/codesnippet/visualbasic/m-system.net.ipendpoint._4_1.vb)]
 [!code-cs[System.Net.IPEndPoint#2](~/add/codesnippet/csharp/m-system.net.ipendpoint._4_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
 -or-  
  
 <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.  
  
 -or-  
  
 <paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the IP address of the endpoint.</summary>
        <value>An <see cref="T:System.Net.IPAddress" /> instance containing the IP address of the endpoint.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example sets the Address property using the <xref:System.Net.IPAddress> specified.  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/add/codesnippet/cpp/p-system.net.ipendpoint._2_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#3](~/add/codesnippet/visualbasic/p-system.net.ipendpoint._2_1.vb)]
 [!code-cs[System.Net.IPEndPoint#3](~/add/codesnippet/csharp/p-system.net.ipendpoint._2_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFamily">
      <MemberSignature Language="C#" Value="public override System.Net.Sockets.AddressFamily AddressFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily AddressFamily" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.AddressFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Internet Protocol (IP) address family.</summary>
        <value>Returns <see cref="T:System.Net.Sockets.AddressFamily" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the AddressFamily property to return the <xref:System.Net.Sockets.AddressFamily> to which the <xref:System.Net.IPEndPoint> belongs. In this case it is the <xref:System.Net.Sockets.AddressFamily><xref:System.Net.Sockets.AddressFamily>.  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/add/codesnippet/cpp/p-system.net.ipendpoint._0_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#3](~/add/codesnippet/visualbasic/p-system.net.ipendpoint._0_1.vb)]
 [!code-cs[System.Net.IPEndPoint#3](~/add/codesnippet/csharp/p-system.net.ipendpoint._0_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override System.Net.EndPoint Create (System.Net.SocketAddress socketAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.EndPoint Create(class System.Net.SocketAddress socketAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socketAddress" Type="System.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="socketAddress">The <see cref="T:System.Net.SocketAddress" /> to use for the endpoint.</param>
        <summary>Creates an endpoint from a socket address.</summary>
        <returns>An <see cref="T:System.Net.EndPoint" /> instance using the specified socket address.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the specified <xref:System.Net.SocketAddress> to create an <xref:System.Net.IPEndPoint>.  
  
 [!code-cpp[System.Net.IPEndPoint#5](~/add/codesnippet/cpp/m-system.net.ipendpoint._1_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#5](~/add/codesnippet/visualbasic/m-system.net.ipendpoint._1_1.vb)]
 [!code-cs[System.Net.IPEndPoint#5](~/add/codesnippet/csharp/m-system.net.ipendpoint._1_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The AddressFamily of <paramref name="socketAddress" /> is not equal to the AddressFamily of the current instance.  
  
 -or-  
  
 <paramref name="socketAddress" />.Size &lt; 8.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
        <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</summary>
        <returns>
          <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash value for a <see cref="T:System.Net.IPEndPoint" /> instance.</summary>
        <returns>An integer hash value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetHashCode method returns a hash code of the IP endpoint instance. This value can be used as a key in hash tables.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPort">
      <MemberSignature Language="C#" Value="public const int MaxPort = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxPort = (65535)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MaxPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary>Specifies the maximum value that can be assigned to the <see cref="System.Net.IPEndPoint.Port%2A" /> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the MaxPort property to print the maximum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.  
  
 [!code-cpp[IPEndPoint_Properties#4](~/add/codesnippet/cpp/f-system.net.ipendpoint._0_1.cpp)]
 [!code-vb[IPEndPoint_Properties#4](~/add/codesnippet/visualbasic/f-system.net.ipendpoint._0_1.vb)]
 [!code-cs[IPEndPoint_Properties#4](~/add/codesnippet/csharp/f-system.net.ipendpoint._0_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPort">
      <MemberSignature Language="C#" Value="public const int MinPort = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinPort = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MinPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Specifies the minimum value that can be assigned to the <see cref="System.Net.IPEndPoint.Port%2A" /> property. This field is read-only.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the MinPort property to print the minimum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.  
  
 [!code-cpp[IPEndPoint_Properties#4](~/add/codesnippet/cpp/f-system.net.ipendpoint._1_1.cpp)]
 [!code-vb[IPEndPoint_Properties#4](~/add/codesnippet/visualbasic/f-system.net.ipendpoint._1_1.vb)]
 [!code-cs[IPEndPoint_Properties#4](~/add/codesnippet/csharp/f-system.net.ipendpoint._1_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the port number of the endpoint.</summary>
        <value>An integer value in the range <see cref="F:System.Net.IPEndPoint.MinPort" /> to <see cref="F:System.Net.IPEndPoint.MaxPort" /> indicating the port number of the endpoint.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the Port property to set TCP port number of the <xref:System.Net.EndPoint>.  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/add/codesnippet/cpp/p-system.net.ipendpoint._1_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#3](~/add/codesnippet/visualbasic/p-system.net.ipendpoint._1_1.vb)]
 [!code-cs[System.Net.IPEndPoint#3](~/add/codesnippet/csharp/p-system.net.ipendpoint._1_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value that was specified for a set operation is less than <see cref="F:System.Net.IPEndPoint.MinPort" /> or greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public override System.Net.SocketAddress Serialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.SocketAddress Serialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Serialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serializes endpoint information into a <see cref="T:System.Net.SocketAddress" /> instance.</summary>
        <returns>A <see cref="T:System.Net.SocketAddress" /> instance containing the socket address for the endpoint.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example uses the Serialize method to serialize endpoint information into a <xref:System.Net.SocketAddress> instance.  
  
 [!code-cpp[System.Net.IPEndPoint#4](~/add/codesnippet/cpp/m-system.net.ipendpoint._2_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#4](~/add/codesnippet/visualbasic/m-system.net.ipendpoint._2_1.vb)]
 [!code-cs[System.Net.IPEndPoint#4](~/add/codesnippet/csharp/m-system.net.ipendpoint._2_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the IP address and port number of the specified endpoint.</summary>
        <returns>A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example returns a string representation of the IP address and port number of the specified <xref:System.Net.IPEndPoint>.  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/add/codesnippet/cpp/m-system.net.ipendpoint._3_1.cpp)]
 [!code-vb[System.Net.IPEndPoint#3](~/add/codesnippet/visualbasic/m-system.net.ipendpoint._3_1.vb)]
 [!code-cs[System.Net.IPEndPoint#3](~/add/codesnippet/csharp/m-system.net.ipendpoint._3_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>