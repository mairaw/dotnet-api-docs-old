<Type Name="NetworkCredential" FullName="System.Net.NetworkCredential">
  <TypeSignature Language="C#" Value="public class NetworkCredential : System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkCredential extends System.Object implements class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkCredential" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The NetworkCredential class is a base class that supplies credentials in password-based authentication schemes such as basic, digest, NTLM, and Kerberos. Classes that implement the <xref:System.Net.ICredentials> interface, such as the <xref:System.Net.CredentialCache> class, return NetworkCredential objects.  
  
 This class does not support public key-based authentication methods such as Secure Sockets Layer (SSL) client authentication.  
  
   
  
## Examples  
 The following code example associates a NetworkCredential object with a set of Uniform Resource Identifiers (URIs) in a <xref:System.Net.CredentialCache>. It then passes the <xref:System.Net.CredentialCache> to a <xref:System.Net.WebRequest> object, which uses it to authenticate requests to an Internet server.  
  
 [!code-vb[Classic NetworkCredential Example#1](~/add/codesnippet/visualbasic/t-system.net.networkcred_1.vb)]
 [!code-cpp[Classic NetworkCredential Example#1](~/add/codesnippet/cpp/t-system.net.networkcred_1.cpp)]
 [!code-cs[Classic NetworkCredential Example#1](~/add/codesnippet/csharp/t-system.net.networkcred_1.cs)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkCredential.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default constructor for the <xref:System.Net.NetworkCredential> class initializes all properties to `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkCredential (string userName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string userName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="userName">The user name associated with the credentials.</param>
        <param name="password">The password for the user name associated with the credentials.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name and password.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The constructor initializes a <xref:System.Net.NetworkCredential> object with the <xref:System.Net.NetworkCredential.UserName%2A> property set to `userName` and the <xref:System.Net.NetworkCredential.Password%2A> property set to `password`.  
  
 The `password` parameter is a <xref:System.Security.SecureString> instance.  
  
 If this constructor is called with the `password` parameter set to `null`, a new instance of <xref:System.Security.SecureString> is initialized, If secure strings are not supported on this platform, then the <xref:System.NotSupportedException> is thrown  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Security.SecureString" /> class is not supported on this platform.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkCredential (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkCredential.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name associated with the credentials.</param>
        <param name="password">The password for the user name associated with the credentials.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name and password.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The constructor initializes a <xref:System.Net.NetworkCredential> object with the <xref:System.Net.NetworkCredential.UserName%2A> property set to `userName` and the <xref:System.Net.NetworkCredential.Password%2A> property set to `password`.  
  
   
  
## Examples  
 The following code example creates a <xref:System.Net.NetworkCredential> object using the specified user name and password.  
  
 [!code-cs[NetworkCredential_Constructor2#1](~/add/codesnippet/csharp/m-system.net.networkcred_1_1.cs)]
 [!code-cpp[NetworkCredential_Constructor2#1](~/add/codesnippet/cpp/m-system.net.networkcred_1_1.cpp)]
 [!code-vb[NetworkCredential_Constructor2#1](~/add/codesnippet/visualbasic/m-system.net.networkcred_1_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkCredential (string userName, System.Security.SecureString password, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string userName, class System.Security.SecureString password, string domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name associated with the credentials.</param>
        <param name="password">The password for the user name associated with the credentials.</param>
        <param name="domain">The domain associated with these credentials.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name, password, and domain.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The constructor initializes a <xref:System.Net.NetworkCredential> object with the <xref:System.Net.NetworkCredential.UserName%2A> property set to `userName`, the <xref:System.Net.NetworkCredential.Password%2A> property set to `password`, and the <xref:System.Net.NetworkCredential.Domain%2A> property set to `domain`.  
  
 The `password` parameter is a <xref:System.Security.SecureString> instance.  
  
 If this constructor is called with the `password` parameter set to `null`, a new instance of <xref:System.Security.SecureString> is initialized, If secure strings are not supported on this platform, then the <xref:System.NotSupportedException> is thrown  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Security.SecureString" /> class is not supported on this platform.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkCredential (string userName, string password, string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string userName, string password, string domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name associated with the credentials.</param>
        <param name="password">The password for the user name associated with the credentials.</param>
        <param name="domain">The domain associated with these credentials.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkCredential" /> class with the specified user name, password, and domain.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The constructor initializes a <xref:System.Net.NetworkCredential> object with the <xref:System.Net.NetworkCredential.UserName%2A> property set to `userName`, the <xref:System.Net.NetworkCredential.Password%2A> property set to `password`, and the <xref:System.Net.NetworkCredential.Domain%2A> property set to `domain`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkCredential.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the domain or computer name that verifies the credentials.</summary>
        <value>The name of the domain associated with the credentials.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Domain property specifies the domain or realm to which the user name belongs. Typically, this is the host computer name where the application runs or the user domain for the currently logged in user.  
  
   
  
## Examples  
 The following code example uses the Domain property to set the domain associated with the credentials.  
  
 [!code-cs[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/csharp/p-system.net.networkcred_2_1.cs)]
 [!code-vb[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/visualbasic/p-system.net.networkcred_2_1.vb)]
 [!code-cpp[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/cpp/p-system.net.networkcred_2_1.cpp)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">to get the system domain. Associated enumeration: <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uri, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uri, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI that the client provides authentication for.</param>
        <param name="authType">The type of authentication requested, as defined in the <see cref="System.Net.IAuthenticationModule.AuthenticationType%2A" /> property.</param>
        <summary>Returns an instance of the <see cref="T:System.Net.NetworkCredential" /> class for the specified Uniform Resource Identifier (URI) and authentication type.</summary>
        <returns>A <see cref="T:System.Net.NetworkCredential" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example uses the GetCredential method to retrieve a <xref:System.Net.NetworkCredential> object for the specified URI.  
  
 [!code-cpp[NetworkCredential_GetCredential#1](~/add/codesnippet/cpp/m-system.net.networkcred_0_1.cpp)]
 [!code-vb[NetworkCredential_GetCredential#1](~/add/codesnippet/visualbasic/m-system.net.networkcred_0_1.vb)]
 [!code-cs[NetworkCredential_GetCredential#1](~/add/codesnippet/csharp/m-system.net.networkcred_0_1.cs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">The host computer that authenticates the client.</param>
        <param name="port">The port on the <c>host</c> that the client communicates with.</param>
        <param name="authenticationType">The type of authentication requested, as defined in the <see cref="System.Net.IAuthenticationModule.AuthenticationType%2A" /> property.</param>
        <summary>Returns an instance of the <see cref="T:System.Net.NetworkCredential" /> class for the specified host, port, and authentication type.</summary>
        <returns>A <see cref="T:System.Net.NetworkCredential" /> for the specified host, port, and authentication protocol, or <see langword="null" /> if there are no credentials available for the specified host, port, and authentication protocol.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The value of `authType` corresponds to the <xref:System.Net.IAuthenticationModule.AuthenticationType%2A?displayProperty=fullName> property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkCredential.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the password for the user name associated with the credentials.</summary>
        <value>The password associated with the credentials. If this <see cref="T:System.Net.NetworkCredential" /> instance was initialized with the <paramref name="password" /> parameter set to <see langword="null" />, then the Password property will return an empty string.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example uses the Password property to set the password associated with the credentials.  
  
 [!code-cs[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/csharp/p-system.net.networkcred_0_1.cs)]
 [!code-vb[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/visualbasic/p-system.net.networkcred_0_1.vb)]
 [!code-cpp[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/cpp/p-system.net.networkcred_0_1.cpp)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">to get the user password. Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SecurePassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString SecurePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString SecurePassword" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkCredential.SecurePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the password as a <see cref="T:System.Security.SecureString" /> instance.</summary>
        <value>The password for the user name associated with the credentials.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If an application attempts to set the SecurePassword property to `null`, a new instance of <xref:System.Security.SecureString> is initialized, If secure strings are not supported on this platform, then the <xref:System.NotSupportedException> is thrown  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Security.SecureString" /> class is not supported on this platform.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkCredential.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the user name associated with the credentials.</summary>
        <value>The user name associated with the credentials.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example uses the UserName property to set the user name associated with the credentials.  
  
 [!code-cs[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/csharp/p-system.net.networkcred_1_1.cs)]
 [!code-vb[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/visualbasic/p-system.net.networkcred_1_1.vb)]
 [!code-cpp[NetworkCredential_UserName_Password_Domain#1](~/add/codesnippet/cpp/p-system.net.networkcred_1_1.cpp)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">to read the user name from the system. Associated enumeration: <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>