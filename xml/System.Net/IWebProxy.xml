<Type Name="IWebProxy" FullName="System.Net.IWebProxy">
  <TypeSignature Language="C#" Value="public interface IWebProxy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebProxy" />
  <TypeSignature Language="DocId" Value="T:System.Net.IWebProxy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Provides the base interface for implementation of proxy access for the <see cref="T:System.Net.WebRequest" /> class.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IWebProxy interface provides the methods and properties that are required by the <xref:System.Net.WebRequest> class to access proxy servers.  
  
 The <xref:System.Net.WebProxy> class is the base implementation of the IWebProxy interface.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.IWebProxy.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The credentials to submit to the proxy server for authentication.</summary>
        <value>An <see cref="T:System.Net.ICredentials" /> instance that contains the credentials that are needed to authenticate a request to the proxy server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Credentials property is an <xref:System.Net.ICredentials> instance that contains the authorization credentials to send to the proxy server in response to an HTTP 407 (proxy authorization) status code.  
  
   
  
## Examples  
 The following example uses the <xref:System.Net.WebProxy.Credentials%2A> property to set the credentials that will be submitted to the proxy server for authentication.  
  
 [!code-cs[IWebProxy_Interface#1](~/add/codesnippet/csharp/p-system.net.iwebproxy.c_1.cs)]
 [!code-vb[IWebProxy_Interface#1](~/add/codesnippet/visualbasic/p-system.net.iwebproxy.c_1.vb)]
 [!code-cpp[IWebProxy_Interface#1](~/add/codesnippet/cpp/p-system.net.iwebproxy.c_1.cpp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxy">
      <MemberSignature Language="C#" Value="public Uri GetProxy (Uri destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetProxy(class System.Uri destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IWebProxy.GetProxy(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="destination">A <see cref="T:System.Uri" /> that specifies the requested Internet resource.</param>
        <summary>Returns the URI of a proxy.</summary>
        <returns>A <see cref="T:System.Uri" /> instance that contains the URI of the proxy used to contact <paramref name="destination" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetProxy method returns the URI of the proxy server that handles requests to the Internet resource that is specified in the `destination` parameter.  
  
   
  
## Examples  
 The following example uses the <xref:System.Net.WebProxy.GetProxy%2A> method to return the URI that the <xref:System.Net.WebRequest> uses to access the Internet resource.  
  
 [!code-cs[IWebProxy_Interface#4](~/add/codesnippet/csharp/m-system.net.iwebproxy.g_1.cs)]
 [!code-vb[IWebProxy_Interface#4](~/add/codesnippet/visualbasic/m-system.net.iwebproxy.g_1.vb)]
 [!code-cpp[IWebProxy_Interface#4](~/add/codesnippet/cpp/m-system.net.iwebproxy.g_1.cpp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBypassed">
      <MemberSignature Language="C#" Value="public bool IsBypassed (Uri host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBypassed(class System.Uri host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IWebProxy.IsBypassed(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="host">The <see cref="T:System.Uri" /> of the host to check for proxy use.</param>
        <summary>Indicates that the proxy should not be used for the specified host.</summary>
        <returns>
          <see langword="true" /> if the proxy server should not be used for <paramref name="host" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IsBypassed method indicates whether to use the proxy server to access the host that is specified in the `host` parameter. If IsBypassed is `true`, the proxy is not used to contact the host and the request is passed directly to the server.  
  
   
  
## Examples  
 The following example uses the <xref:System.Net.WebProxy.IsBypassed%2A> property to determine whether the proxy server should be used for the specified host.  
  
 [!code-cs[IWebProxy_Interface#4](~/add/codesnippet/csharp/m-system.net.iwebproxy.i_1.cs)]
 [!code-vb[IWebProxy_Interface#4](~/add/codesnippet/visualbasic/m-system.net.iwebproxy.i_1.vb)]
 [!code-cpp[IWebProxy_Interface#4](~/add/codesnippet/cpp/m-system.net.iwebproxy.i_1.cpp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>