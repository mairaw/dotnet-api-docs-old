<Type Name="HttpWebResponse" FullName="System.Net.HttpWebResponse">
  <TypeSignature Language="C#" Value="public class HttpWebResponse : System.Net.WebResponse, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HttpWebResponse extends System.Net.WebResponse implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpWebResponse" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebResponse</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides an HTTP-specific implementation of the <see cref="T:System.Net.WebResponse" /> class.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class contains support for HTTP-specific uses of the properties and methods of the <xref:System.Net.WebResponse> class. The HttpWebResponse class is used to build HTTP stand-alone client applications that send HTTP requests and receive HTTP responses.  
  
> [!NOTE]
>  Do not confuse HttpWebResponse with the <xref:System.Web.HttpResponse> class that is used in ASP.NET applications and whose methods and properties are exposed through ASP.NET's intrinsic `Response` object.  
  
 You should never directly create an instance of the HttpWebResponse class. Instead, use the instance returned by a call to <xref:System.Net.HttpWebRequest.GetResponse%2A?displayProperty=fullName>. You must call either the <xref:System.IO.Stream.Close%2A?displayProperty=fullName> or the <xref:System.Net.HttpWebResponse.Close%2A?displayProperty=fullName> method to close the response and release the connection for reuse. It is not necessary to call both <xref:System.IO.Stream.Close%2A?displayProperty=fullName> and <xref:System.Net.HttpWebResponse.Close%2A?displayProperty=fullName>, but doing so does not cause an error.  
  
 Common header information returned from the Internet resource is exposed as properties of the class. See the following table for a complete list. Other headers can be read from the <xref:System.Net.HttpWebResponse.Headers%2A> property as name/value pairs.  
  
 The following table shows the common HTTP headers that are available through properties of the HttpWebResponse class.  
  
|Header|Property|  
|------------|--------------|  
|Content-Encoding|<xref:System.Net.HttpWebResponse.ContentEncoding%2A>|  
|Content-Length|<xref:System.Net.HttpWebResponse.ContentLength%2A>|  
|Content-Type|<xref:System.Net.HttpWebResponse.ContentType%2A>|  
|Last-Modified|<xref:System.Net.HttpWebResponse.LastModified%2A>|  
|Server|<xref:System.Net.HttpWebResponse.Server%2A>|  
  
 The contents of the response from the Internet resource are returned as a <xref:System.IO.Stream> by calling the <xref:System.Net.HttpWebResponse.GetResponseStream%2A> method.  
  
   
  
## Examples  
 The following example returns an HttpWebResponse from an <xref:System.Net.HttpWebRequest>.  
  
 [!code-cs[Classic HttpWebResponse Example#1](~/add/codesnippet/csharp/t-system.net.httpwebresp_1.cs)]
 [!code-vb[Classic HttpWebResponse Example#1](~/add/codesnippet/visualbasic/t-system.net.httpwebresp_1.vb)]
 [!code-cpp[Classic HttpWebResponse Example#1](~/add/codesnippet/cpp/t-system.net.httpwebresp_1.cpp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.HttpWebResponse" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWebResponse (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.Net.HttpWebRequest" />.</param>
        <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.Net.HttpWebRequest" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.HttpWebResponse" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This constructor implements the <xref:System.Runtime.Serialization.ISerializable> interface for the <xref:System.Net.HttpWebRequest> class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterSet">
      <MemberSignature Language="C#" Value="public string CharacterSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CharacterSet" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.CharacterSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the character set of the response.</summary>
        <value>A string that contains the character set of the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CharacterSet property contains a value that describes the character set of the response. This character set information is taken from the header returned with the response.  
  
   
  
## Examples  
 The following example obtains the character set of the response.  
  
 [!code-cpp[HttpWebResponse_ContentEncoding_CharacterSet#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_2_1.cpp)]
 [!code-cs[HttpWebResponse_ContentEncoding_CharacterSet#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_2_1.cs)]
 [!code-vb[HttpWebResponse_ContentEncoding_CharacterSet#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_2_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the response stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Close method closes the response stream and releases the connection to the resource for reuse by other requests.  
  
 You must call either the <xref:System.IO.Stream.Close%2A?displayProperty=fullName> or the Close method to close the stream and release the connection for reuse. It is not necessary to call both <xref:System.IO.Stream.Close%2A?displayProperty=fullName> and Close, but doing so does not cause an error. Failure to close the stream can cause your application to run out of connections.  
  
> [!NOTE]
>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md).  
  
   
  
## Examples  
 The following example demonstrates how to close a <xref:System.Net.HttpWebResponse>.  
  
 [!code-cs[HttpWebResponse_Close#1](~/add/codesnippet/csharp/m-system.net.httpwebresp_2_1.cs)]
 [!code-cpp[HttpWebResponse_Close#1](~/add/codesnippet/cpp/m-system.net.httpwebresp_2_1.cpp)]
 [!code-vb[HttpWebResponse_Close#1](~/add/codesnippet/visualbasic/m-system.net.httpwebresp_2_1.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the method that is used to encode the body of the response.</summary>
        <value>A string that describes the method that is used to encode the body of the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContentEncoding property contains the value of the Content-Encoding header returned with the response.  
  
   
  
## Examples  
 The following example uses the ContentEncoding property to obtain the value of the Content-Encoding header returned with the response.  
  
 [!code-cpp[HttpWebResponse_ContentEncoding_CharacterSet#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_6_1.cpp)]
 [!code-cs[HttpWebResponse_ContentEncoding_CharacterSet#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_6_1.cs)]
 [!code-vb[HttpWebResponse_ContentEncoding_CharacterSet#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_6_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of the content returned by the request.</summary>
        <value>The number of bytes returned by the request. Content length does not include header information.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContentLength property contains the value of the Content-Length header returned with the response. If the Content-Length header is not set in the response, ContentLength is set to the value -1.  
  
   
  
## Examples  
 The following example displays the value of this property.  
  
 [!code-cpp[NCLResponse1#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_9_1.cpp)]
 [!code-cs[NCLResponse1#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_9_1.cs)]
 [!code-vb[NCLResponse1#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_9_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the content type of the response.</summary>
        <value>A string that contains the content type of the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ContentType property contains the value of the Content-Type header returned with the response.  
  
   
  
## Examples  
 The following example displays the value of this property.  
  
 [!code-cpp[NCLResponse1#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_4_1.cpp)]
 [!code-cs[NCLResponse1#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_4_1.cs)]
 [!code-vb[NCLResponse1#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_4_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public virtual System.Net.CookieCollection Cookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the cookies that are associated with this response.</summary>
        <value>A <see cref="T:System.Net.CookieCollection" /> that contains the cookies that are associated with this response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Cookies property provides an instance of the <xref:System.Net.CookieCollection> class that holds the cookies associated with this response.  
  
 If the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property of the associated <xref:System.Net.HttpWebRequest> is `null`, the Cookies property will also be `null`. Any cookie information sent by the server will be available in the <xref:System.Net.HttpWebResponse.Headers%2A> property, however.  
  
   
  
## Examples  
 The following example sends a request to a URL and displays the cookies returned in the response.  
  
 [!code-cs[NCLCookies#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_1_1.cs)]
 [!code-cpp[NCLCookies#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_1_1.cpp)]
 [!code-vb[NCLCookies#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_1_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:System.Net.HttpWebResponse" />, and optionally disposes of the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  
  
 When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.WebResponse> references. This method invokes the `Dispose()` method of each referenced object.  
  
> [!NOTE]
>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
        <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
        <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Any objects that are included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseHeader">
      <MemberSignature Language="C#" Value="public string GetResponseHeader (string headerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetResponseHeader(string headerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="headerName">The header value to return.</param>
        <summary>Gets the contents of a header that was returned with the response.</summary>
        <returns>The contents of the specified header.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use GetResponseHeader to retrieve the contents of particular headers. You must specify which header you want to return.  
  
   
  
## Examples  
 This example creates a Web request and queries for a response. If the site requires authentication, this example will respond with a challenge string. This string is extracted using GetResponseHeader.  
  
 [!code-cs[HttpWebResponse_GetResponseHeader#1](~/add/codesnippet/csharp/m-system.net.httpwebresp_1_1.cs)]
 [!code-vb[HttpWebResponse_GetResponseHeader#1](~/add/codesnippet/visualbasic/m-system.net.httpwebresp_1_1.vb)]
 [!code-cpp[HttpWebResponse_GetResponseHeader#1](~/add/codesnippet/cpp/m-system.net.httpwebresp_1_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetResponseStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetResponseStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.GetResponseStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the stream that is used to read the body of the response from the server.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> containing the body of the response.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetResponseStream method returns the data stream from the requested Internet resource.  
  
> [!NOTE]
>  You must call either the <xref:System.IO.Stream.Close%2A?displayProperty=fullName> or the  <xref:System.Net.HttpWebResponse.Close%2A?displayProperty=fullName> method to close the stream and release the connection for reuse. It is not necessary to call both <xref:System.IO.Stream.Close%2A?displayProperty=fullName> and <xref:System.Net.HttpWebResponse.Close%2A?displayProperty=fullName>, but doing so does not cause an error. Failure to close the stream will cause your application to run out of connections.  
  
> [!NOTE]
>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md).  
  
   
  
## Examples  
 The following example demonstrates how to use GetResponseStream to return the <xref:System.IO.Stream> instance used to read the response from the server.  
  
 [!code-cs[HttpWebResponse_GetResponseStream#1](~/add/codesnippet/csharp/m-system.net.httpwebresp_0_1.cs)]
 [!code-cpp[HttpWebResponse_GetResponseStream#1](~/add/codesnippet/cpp/m-system.net.httpwebresp_0_1.cpp)]
 [!code-vb[HttpWebResponse_GetResponseStream#1](~/add/codesnippet/visualbasic/m-system.net.httpwebresp_0_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.ProtocolViolationException">There is no response stream.</exception>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the headers that are associated with this response from the server.</summary>
        <value>A <see cref="T:System.Net.WebHeaderCollection" /> that contains the header information returned with the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Headers property is a collection of name/value pairs that contain the HTTP header values returned with the response. Common header information returned from the Internet resource is exposed as properties of the <xref:System.Net.HttpWebResponse> class. The following table lists common headers that the API exposes as properties.  
  
|Header|Property|  
|------------|--------------|  
|Content-Encoding|<xref:System.Net.HttpWebResponse.ContentEncoding%2A>|  
|Content-Length|<xref:System.Net.HttpWebResponse.ContentLength%2A>|  
|Content-Type|<xref:System.Net.HttpWebResponse.ContentType%2A>|  
|Last-Modified|<xref:System.Net.HttpWebResponse.LastModified%2A>|  
|Server|<xref:System.Net.HttpWebResponse.Server%2A>|  
  
   
  
## Examples  
 The following example writes the contents of all of the response headers to the console.  
  
 [!code-vb[HttpWebResponse_Headers#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_11_1.vb)]
 [!code-cs[HttpWebResponse_Headers#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_11_1.cs)]
 [!code-cpp[HttpWebResponse_Headers#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_11_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether both client and server were authenticated.</summary>
        <value>
          <see langword="true" /> if mutual authentication occurred; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can specify mutual authentication using the <xref:System.Net.WebRequest.AuthenticationLevel%2A> property.  
  
 Accessing this property can throw <xref:System.ObjectDisposedException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public DateTime LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the last date and time that the contents of the response were modified.</summary>
        <value>A <see cref="T:System.DateTime" /> that contains the date and time that the contents of the response were modified.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The LastModified property contains the value of the Last-Modified header received with the response. The date and time are assumed to be local time.  
  
   
  
## Examples  
 This example creates an <xref:System.Net.HttpWebRequest> and queries for a response. This example then checks whether the entity requested had been modified any time today.  
  
 [!code-cpp[HttpWebResponse_LastModified#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_7_1.cpp)]
 [!code-vb[HttpWebResponse_LastModified#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_7_1.vb)]
 [!code-cs[HttpWebResponse_LastModified#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_7_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the method that is used to return the response.</summary>
        <value>A string that contains the HTTP method that is used to return the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Method returns the method that is used to return the response. Common HTTP methods are GET, HEAD, POST, PUT, and DELETE.  
  
   
  
## Examples  
 The following example checks the string contained in Method, to determine the Http method invoked by the Web server.  
  
 [!code-vb[HttpWebResponse_Method_Server#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_3_1.vb)]
 [!code-cpp[HttpWebResponse_Method_Server#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_3_1.cpp)]
 [!code-cs[HttpWebResponse_Method_Server#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_3_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the HTTP protocol that is used in the response.</summary>
        <value>A <see cref="T:System.Version" /> that contains the HTTP protocol version of the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ProtocolVersion property contains the HTTP protocol version number of the response sent by the Internet resource.  
  
   
  
## Examples  
 This example creates an <xref:System.Net.HttpWebRequest> and queries for an <xref:System.Net.HttpWebResponse>. The example then checks to see if the server is responding with the same version.  
  
 [!code-cpp[HttpWebResponse_ProtocolVersion#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_12_1.cpp)]
 [!code-vb[HttpWebResponse_ProtocolVersion#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_12_1.vb)]
 [!code-cs[HttpWebResponse_ProtocolVersion#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_12_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResponseUri">
      <MemberSignature Language="C#" Value="public override Uri ResponseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ResponseUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.ResponseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URI of the Internet resource that responded to the request.</summary>
        <value>A <see cref="T:System.Uri" /> that contains the URI of the Internet resource that responded to the request.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ResponseUri property contains the URI of the Internet resource that actually responded to the request. This URI might not be the same as the originally requested URI, if the original server redirected the request.  
  
 The ResponseUri property will use the Content-Location header if present.  
  
 Applications that need to access the last redirected ResponseUri should use the <xref:System.Net.HttpWebRequest.Address%2A?displayProperty=fullName> property rather than ResponseUri, since the use of ResponseUri property may open security vulnerabilities.  
  
   
  
## Examples  
 This example creates a <xref:System.Net.HttpWebRequest> and queries for an <xref:System.Net.HttpWebResponse> and then checks to see whether the original URI was redirected by the server.  
  
 [!code-cpp[HttpWebResponse_ResponseUri#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_10_1.cpp)]
 [!code-cs[HttpWebResponse_ResponseUri#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_10_1.cs)]
 [!code-vb[HttpWebResponse_ResponseUri#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_10_1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public string Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the server that sent the response.</summary>
        <value>A string that contains the name of the server that sent the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Server property contains the value of the Server header returned with the response.  
  
   
  
## Examples  
 The following example uses the Server property to display the Web server's name to the console.  
  
 [!code-vb[HttpWebResponse_Method_Server#2](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_0_1.vb)]
 [!code-cpp[HttpWebResponse_Method_Server#2](~/add/codesnippet/cpp/p-system.net.httpwebresp_0_1.cpp)]
 [!code-cs[HttpWebResponse_Method_Server#2](~/add/codesnippet/csharp/p-system.net.httpwebresp_0_1.cs)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public virtual System.Net.HttpStatusCode StatusCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.HttpStatusCode StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.StatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpStatusCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the status of the response.</summary>
        <value>One of the <see cref="T:System.Net.HttpStatusCode" /> values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The StatusCode parameter is a number that indicates the status of the HTTP response. The expected values for status are defined in the <xref:System.Net.HttpStatusCode> class.  
  
   
  
## Examples  
 The following example uses StatusCode to verify that the status of the <xref:System.Net.HttpWebResponse> is OK.  
  
 [!code-cs[HttpWebResponse_StatusCode_StatusDescription#1](~/add/codesnippet/csharp/p-system.net.httpwebresp_5_1.cs)]
 [!code-vb[HttpWebResponse_StatusCode_StatusDescription#1](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_5_1.vb)]
 [!code-cpp[HttpWebResponse_StatusCode_StatusDescription#1](~/add/codesnippet/cpp/p-system.net.httpwebresp_5_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public virtual string StatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.StatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the status description returned with the response.</summary>
        <value>A string that describes the status of the response.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A common status message is OK.  
  
   
  
## Examples  
 The following example uses StatusDescription to verify that the status of the <xref:System.Net.HttpWebResponse> is OK.  
  
 [!code-cs[HttpWebResponse_StatusCode_StatusDescription#2](~/add/codesnippet/csharp/p-system.net.httpwebresp_8_1.cs)]
 [!code-vb[HttpWebResponse_StatusCode_StatusDescription#2](~/add/codesnippet/visualbasic/p-system.net.httpwebresp_8_1.vb)]
 [!code-cpp[HttpWebResponse_StatusCode_StatusDescription#2](~/add/codesnippet/cpp/p-system.net.httpwebresp_8_1.cpp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsHeaders">
      <MemberSignature Language="C#" Value="public override bool SupportsHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebResponse.SupportsHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates if headers are supported.</summary>
        <value>Returns <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> if headers are supported; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is always true for [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">The object into which this <see cref="T:System.Net.HttpWebResponse" /> will be serialized.</param>
        <param name="streamingContext">The destination of the serialization.</param>
        <summary>Serializes this instance into the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>