   Public Shared Sub Main()

      ' Get the type information.
      ' Note: The MyMath class is a proxy class generated by the Wsdl.exe 
      ' utility for the Math Web Service. This class can also be found in
      ' the SoapHttpClientProtocol class example. 
      Dim myType As Type = GetType(MyMath.MyMath)

      ' Get the method info.
      Dim myBeginMethod As MethodInfo = myType.GetMethod("BeginAdd")
      Dim myEndMethod As MethodInfo = myType.GetMethod("EndAdd")

      ' Create an instance of the LogicalMethodInfo class.
      Dim myLogicalMethodInfo As LogicalMethodInfo = _
         LogicalMethodInfo.Create(New MethodInfo() {myBeginMethod, myEndMethod}, _
         LogicalMethodTypes.Async)(0)

      ' Get an instance of the proxy class.
      Dim myMathService As New MyMath.MyMath()

      ' Call the MyEndIntimationMethod method to intimate the end of 
      ' the asynchronous call.
      Dim myAsyncCallback As New AsyncCallback(AddressOf MyEndIntimationMethod)

      ' Beging to invoke the Add method.
      Dim myAsyncResult As IAsyncResult = _
         myLogicalMethodInfo.BeginInvoke( _
         myMathService, New Object() {10, 10}, myAsyncCallback, Nothing)

      ' Wait until invoke is complete.
      myAsyncResult.AsyncWaitHandle.WaitOne()

      ' Get the result.
      Dim myReturnValue() As Object
      myReturnValue = myLogicalMethodInfo.EndInvoke(myMathService, myAsyncResult)

      Console.WriteLine(("Sum of 10 and 10 is " & myReturnValue(0)))
   End Sub

   ' This method will be called at the end of asynchronous call.
   Shared Sub MyEndIntimationMethod(ByVal Result As IAsyncResult)
      Console.WriteLine("Asynchronous call on method 'Add' finished.")
   End Sub
