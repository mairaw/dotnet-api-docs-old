   public static void Main()
   {
      // Get the type information.
      // Note: The MyMath class is a proxy class generated by the Wsdl.exe
      // utility for the Math Web service. This class can also be found in 
      // the SoapHttpClientProtocol class example. 
      Type myType = typeof(MyMath.MyMath);

      // Get the method info.
      MethodInfo myBeginMethod = myType.GetMethod("BeginAdd");
      MethodInfo myEndMethod = myType.GetMethod("EndAdd");

      // Create an instance of the LogicalMethodInfo class.
      LogicalMethodInfo myLogicalMethodInfo = 
         (LogicalMethodInfo.Create(new MethodInfo[] {myBeginMethod,myEndMethod},
         LogicalMethodTypes.Async))[0];

      // Get an instance of the proxy class.
      MyMath.MyMath myMathService = new MyMath.MyMath();

      // Call the MyEndIntimationMethod method to intimate the end of 
      // the asynchronous call.
      AsyncCallback myAsyncCallback = new AsyncCallback(MyEndIntimationMethod);

      // Begin to invoke the Add method.
      IAsyncResult myAsyncResult = myLogicalMethodInfo.BeginInvoke(
         myMathService,new object[]{10,10},myAsyncCallback,null);
      
      // Wait until invoke is complete.
      myAsyncResult.AsyncWaitHandle.WaitOne();
      
      // Get the result.
      object[] myReturnValue;
      myReturnValue = myLogicalMethodInfo.EndInvoke(myMathService,myAsyncResult);
      
      Console.WriteLine("Sum of 10 and 10 is " + myReturnValue[0]);
   }
   
   // This method will be called at the end of the asynchronous call.
   static void MyEndIntimationMethod(IAsyncResult Result)
   {
      Console.WriteLine("Asynchronous call on Add method finished.");
   }