      myServiceDescription->Types->Schemas->Remove( myServiceDescription->Types->Schemas[ 0 ] );
      XmlSchema^ myXmlSchema = gcnew XmlSchema;
      myXmlSchema->AttributeFormDefault = XmlSchemaForm::Qualified;
      myXmlSchema->ElementFormDefault = XmlSchemaForm::Qualified;
      myXmlSchema->TargetNamespace = myServiceDescription->TargetNamespace;
      XmlSchemaElement^ myXmlElement1 = gcnew XmlSchemaElement;
      myXmlElement1->Name = "Add";
      XmlSchemaComplexType^ myXmlSchemaComplexType = gcnew XmlSchemaComplexType;
      XmlSchemaSequence^ myXmlSchemaSequence = gcnew XmlSchemaSequence;
      myXmlSchemaSequence->Items->Add( CreateComplexTypeXmlElement( "1", "1", "a", gcnew XmlQualifiedName( "s:float" ) ) );
      myXmlSchemaSequence->Items->Add( CreateComplexTypeXmlElement( "1", "1", "b", gcnew XmlQualifiedName( "s:float" ) ) );
      myXmlSchemaComplexType->Particle = myXmlSchemaSequence;
      myXmlElement1->SchemaType = myXmlSchemaComplexType;
      myXmlSchema->Items->Add( myXmlElement1 );
      XmlSchemaElement^ myXmlElement2 = gcnew XmlSchemaElement;
      myXmlElement2->Name = "AddResponse";
      myXmlSchemaComplexType = gcnew XmlSchemaComplexType;
      myXmlSchemaSequence = gcnew XmlSchemaSequence;
      myXmlSchemaSequence->Items->Add( CreateComplexTypeXmlElement( "1", "1", "AddResult", gcnew XmlQualifiedName( "s:float" ) ) );
      myXmlSchemaComplexType->Particle = myXmlSchemaSequence;
      myXmlElement2->SchemaType = myXmlSchemaComplexType;
      myXmlSchema->Items->Add( myXmlElement2 );
      XmlSchemaElement^ myXmlElement3 = gcnew XmlSchemaElement;
      myXmlElement3->Name = "Subtract";
      myXmlSchemaComplexType = gcnew XmlSchemaComplexType;
      myXmlSchemaSequence = gcnew XmlSchemaSequence;
      myXmlSchemaSequence->Items->Add( CreateComplexTypeXmlElement( "1", "1", "a", gcnew XmlQualifiedName( "s:float" ) ) );
      myXmlSchemaSequence->Items->Add( CreateComplexTypeXmlElement( "1", "1", "b", gcnew XmlQualifiedName( "s:float" ) ) );
      myXmlSchemaComplexType->Particle = myXmlSchemaSequence;
      myXmlElement3->SchemaType = myXmlSchemaComplexType;
      myXmlSchema->Items->Add( myXmlElement3 );
      XmlSchemaElement^ myXmlElement4 = gcnew XmlSchemaElement;
      myXmlElement4->Name = "SubtractResponse";
      myXmlSchemaComplexType = gcnew XmlSchemaComplexType;
      myXmlSchemaSequence = gcnew XmlSchemaSequence;
      myXmlSchemaSequence->Items->Add( CreateComplexTypeXmlElement( "1", "1", "SubtractResult", gcnew XmlQualifiedName( "s:int" ) ) );
      myXmlSchemaComplexType->Particle = myXmlSchemaSequence;
      myXmlElement4->SchemaType = myXmlSchemaComplexType;
      myXmlSchema->Items->Add( myXmlElement4 );

      // Add the schemas to the Types property of the ServiceDescription.
      myServiceDescription->Types->Schemas->Add( myXmlSchema );